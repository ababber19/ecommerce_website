{"ast":null,"code":"import { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL } from \"../constants/orderConstants\";\nimport axios from \"axios\"; // Creates order\n\nexport const createOrder = user => async (dispatch, getState) => {\n  // Tries to update user's details\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/orders/add/`, order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem(\"userInfo\", JSON.stringify(data));\n  } catch (error) {\n    // If fails, prints error to user\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/aryamanbabber/Desktop/ecommerce/frontend/src/actions/orderActions.js"],"names":["ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","axios","createOrder","user","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","order","payload","localStorage","setItem","JSON","stringify","error","response","detail","message"],"mappings":"AAAA,SACIA,oBADJ,EAEIC,oBAFJ,EAGIC,iBAHJ,QAIS,6BAJT;AAKE,OAAOC,KAAP,MAAkB,OAAlB,C,CAGA;;AACF,OAAO,MAAMC,WAAW,GAAIC,IAAD,IAAU,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AAC/D;AACA,MAAI;AACFD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR;AAIA,UAAM;AACJS,MAAAA,SAAS,EAAE;AAAEC,QAAAA;AAAF;AADP,QAEFH,QAAQ,EAFZ;AAIA,UAAMI,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPC,QAAAA,aAAa,EAAG,UAASH,QAAQ,CAACI,KAAM;AAFjC;AADI,KAAf;AAOA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,KAAK,CAACa,IAAN,CACpB,kBADoB,EAErBC,KAFqB,EAGrBN,MAHqB,CAAvB;AAMAL,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEP,oBADC;AAEPiB,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAKAI,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAAjC;AACD,GA5BD,CA4BE,OAAOQ,KAAP,EAAc;AACd;AACAjB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEN,iBADC;AAEPgB,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MAAtC,GACIF,KAAK,CAACC,QAAN,CAAeT,IAAf,CAAoBU,MADxB,GAEIF,KAAK,CAACG;AALL,KAAD,CAAR;AAOD;AACF,CAxCI","sourcesContent":["import {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAIL,\n  } from \"../constants/orderConstants\";\n  import axios from \"axios\"\n\n\n  // Creates order\nexport const createOrder = (user) => async (dispatch, getState) => {\n    // Tries to update user's details\n    try {\n      dispatch({\n        type: ORDER_CREATE_REQUEST,\n      });\n  \n      const {\n        userLogin: { userInfo },\n      } = getState();\n  \n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      };\n  \n      const { data } = await axios.post(\n        `/api/orders/add/`,\n        order,\n        config\n      );\n  \n      dispatch({\n        type: ORDER_CREATE_SUCCESS,\n        payload: data,\n      });\n  \n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n    } catch (error) {\n      // If fails, prints error to user\n      dispatch({\n        type: ORDER_CREATE_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      });\n    }\n  };\n  "]},"metadata":{},"sourceType":"module"}