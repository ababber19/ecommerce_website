{"ast":null,"code":"var _jsxFileName = \"/Users/aryamanbabber/Desktop/ecommerce/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProductDetails } from '../actions/productActions';\nimport Loader from '../components/Loader';\nimport Message from '../components/Message';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProductScreen({\n  match\n}) {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"btn btn-light my-3\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`,\n              color: '#f8e25'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price: $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Description: \", product.description]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Price: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: [\" $\", product.price, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 78,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \" Status: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: product.countInStock > 0 ? \"In Stock\" : \"Out of Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Qty\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: \"auto\",\n                  className: \"my-1\",\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: qty,\n                    onChange: e => setQty(e.target.value),\n                    children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: x + 1,\n                      children: x + 1\n                    }, x + 1, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 57\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: addToCartHandler,\n                className: \"btn-black\",\n                disabled: product.countInStock === 0,\n                type: \"button\",\n                children: \" Add to Cart\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProductScreen, \"lDBTZcuE3rLJp3qsVWTmqiqsJAA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/Users/aryamanbabber/Desktop/ecommerce/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","Row","Col","Image","ListGroup","Button","Card","Form","Rating","useDispatch","useSelector","listProductDetails","Loader","Message","ProductScreen","match","qty","setQty","dispatch","productDetails","state","loading","error","product","params","id","image","name","rating","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x","addToCartHandler"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, Image, ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport Rating from '../components/Rating'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { listProductDetails } from '../actions/productActions'\nimport Loader from '../components/Loader'\nimport Message from '../components/Message'\n\n\n\nfunction ProductScreen({match}) {\n    const [qty, setQty] = useState(1)\n\n\n    const dispatch = useDispatch()\n\n    const productDetails = useSelector(state => state.productDetails)\n    \n    \n    \n    const {loading, error, product} = productDetails\n\n    \n\n\n    useEffect(() => {\n        dispatch(listProductDetails(match.params.id))\n    }, [dispatch, match])\n\n    \n    \n    return (\n        <div>\n            <Link to=\"/\" className=\"btn btn-light my-3\">\n                Go Back\n            </Link>\n\n            {loading ?\n            <Loader />\n                : error \n                    ? <Message variant=\"danger\">{error}</Message>\n                :(\n                    <Row>\n                <Col md={6}>\n                    <Image src={product.image} alt={product.name} fluid/>\n                </Col>\n\n                <Col md={3}>\n                    <ListGroup variant=\"flush\">\n                        <ListGroup.Item>\n                            <h3>{product.name}</h3>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            <Rating value={product.rating} text={`${product.numReviews} reviews`} color={'#f8e25'}/>\n                        </ListGroup.Item>\n\n                        <ListGroup.Item>\n                            Price: ${product.price}\n                        </ListGroup.Item>\n                        \n                        <ListGroup.Item>\n                            Description: {product.description}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n                \n                <Col md={3}>\n                    <Card>\n                        <ListGroup variant=\"flush\">\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col> Price: </Col>\n                                    <Col>\n                                        <strong> ${product.price} </strong>\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col> Status: </Col>\n                                    <Col>\n                                        {product.countInStock>0 ? \"In Stock\" : \"Out of Stock\"}\n                                    </Col>\n                                </Row>\n                            </ListGroup.Item>\n\n                            {product.countInStock > 0 && (\n                                <ListGroup.Item>\n                                    <Row>\n                                        <Col>Qty</Col>\n                                        <Col xs=\"auto\" className=\"my-1\">\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={qty}\n                                                onChange={(e) => setQty(e.target.value)}>\n\n                                                {\n                                                    [...Array(product.countInStock).keys()].map((x) => (\n                                                        <option key ={x+1} value={x+1}>\n                                                            {x+1}\n                                                        </option>\n                                                    ))\n                                                }\n\n                                            </Form.Control>\n                                        </Col>\n                                    </Row>\n                                </ListGroup.Item>\n                            )}\n\n                            <ListGroup.Item>\n                                <Button \n                                onClick = {addToCartHandler}\n                                className=\"btn-black\" \n                                disabled={product.countInStock===0} \n                                type=\"button\"> Add to Cart \n                                </Button>\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                    \n                </Col>\n            </Row>\n                )\n\n            }\n\n            \n\n        </div>\n    )\n}\n\nexport default ProductScreen\n"]},"metadata":{},"sourceType":"module"}